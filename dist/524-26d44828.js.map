{"version":3,"file":"524-26d44828.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx"],"sourcesContent":["import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, } from 'react';\nimport { object, string } from 'yup';\n\nimport { withLanguage, WithLanguageProps } from '../locale';\nimport { AppliedRedeemablesProps } from './AppliedRedeemables';\n\nexport interface RedeemableFormValues {\n    redeemableCode: string;\n}\n\nexport type ReedemableChildrenProps = Pick<\n    RedeemableProps,\n    | 'onRemovedCoupon'\n    | 'onRemovedGiftCertificate'\n    | 'isRemovingGiftCertificate'\n    | 'isRemovingCoupon'\n    | 'coupons'\n    | 'giftCertificates'\n>;\n\nexport type RedeemableProps = {\n    appliedRedeemableError?: RequestError;\n    isApplyingRedeemable?: boolean;\n    isRemovingRedeemable?: boolean;\n    removedRedeemableError?: RequestError;\n    showAppliedRedeemables?: boolean;\n    shouldCollapseCouponCode?: boolean;\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\n    clearError(error: Error): void;\n} & AppliedRedeemablesProps;\n\nconst Redeemable: FunctionComponent<\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\n> = ({ ...formProps }) => {\n\n    if(formProps?.coupons?.length === 0){\n        (async () => {\n            await formProps.applyCoupon('SHIPPINGTEST');\n        })()\n    }\n\n    return <></>;\n}\n\nexport default withLanguage(\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\n        mapPropsToValues() {\n            return {\n                redeemableCode: '',\n            };\n        },\n\n        async handleSubmit(\n            { redeemableCode },\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\n        ) {\n            const code = redeemableCode.trim();\n\n            try {\n                await applyGiftCertificate(code);\n            } catch (error) {\n                if (error instanceof Error) {\n                    clearError(error);\n                }\n\n                applyCoupon(code);\n            }\n        },\n\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\n            return object({\n                redeemableCode: string().required(\n                    language.translate('redeemable.code_required_error'),\n                ),\n            });\n        },\n    })(memo(Redeemable)),\n);\n","import { CheckoutContextProps } from '../checkout';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToRedeemableProps from './mapToRedeemableProps';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps,\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n\n    return {\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        ...redeemableProps,\n    };\n}\n","import { CheckoutContextProps } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { RedeemableProps } from './Redeemable';\n\nexport default function mapToRedeemableProps(\n    context: CheckoutContextProps,\n): RedeemableProps | null {\n    const {\n        checkoutService,\n        checkoutState: {\n            data: { getConfig, getCoupons, getGiftCertificates },\n            statuses: {\n                isApplyingCoupon,\n                isApplyingGiftCertificate,\n                isRemovingCoupon,\n                isRemovingGiftCertificate,\n            },\n            errors: {\n                getApplyCouponError,\n                getApplyGiftCertificateError,\n                getRemoveCouponError,\n                getRemoveGiftCertificateError,\n            },\n        },\n    } = context;\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    return {\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\n        applyCoupon: checkoutService.applyCoupon,\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\n        clearError: checkoutService.clearError,\n        coupons: getCoupons() || EMPTY_ARRAY,\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\n        isRemovingCoupon: isRemovingCoupon(),\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\n        onRemovedCoupon: checkoutService.removeCoupon,\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\n    };\n}\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\n    return (props) => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            ...redeemableProps\n        } = props;\n\n        return (\n            <OriginalComponent\n                {...mapToOrderSummarySubtotalsProps(checkout)}\n                additionalLineItems={\n                    <Redeemable\n                        {...{\n                            ...redeemableProps,\n                            onRemovedCoupon,\n                            onRemovedGiftCertificate,\n                        }}\n                    />\n                }\n                headerLink={headerLink}\n                lineItems={checkout.cart.lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                total={checkout.outstandingBalance}\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n}: Checkout): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount: hasSelectedShippingOptions(consignments)\n            ? shippingCostBeforeDiscount\n            : undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map((option) => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content: (\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>\n        ),\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image: (\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\n                <IconGiftCertificate />\n            </span>\n        ),\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\n        productOptions: (item.options || []).map((option) => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport { isNumber } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    description?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n    description,\n}) => (\n    <div className=\"product\" data-test=\"cart-item\">\n        <figure className=\"product-column product-figure\">{image}</figure>\n\n        <div className=\"product-column product-body\">\n            <h4\n                className=\"product-title optimizedCheckout-contentPrimary\"\n                data-test=\"cart-item-product-title\"\n            >\n                {`${quantity} x ${name}`}\n            </h4>\n            {productOptions && productOptions.length > 0 && (\n                <ul\n                    className=\"product-options optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-item-product-options\"\n                >\n                    {productOptions.map((option, index) => (\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\n                            {option.content}\n                        </li>\n                    ))}\n                </ul>\n            )}\n            {description && (\n                <div\n                    className=\"product-description optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-item-product-description\"\n                >\n                    {description}\n                </div>\n            )}\n        </div>\n\n        <div className=\"product-column product-actions\">\n            <div\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\n                    'product-price--beforeDiscount':\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                })}\n                data-test=\"cart-item-product-price\"\n            >\n                <ShopperCurrency amount={amount} />\n            </div>\n\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\n                    <ShopperCurrency amount={amountAfterDiscount} />\n                </div>\n            )}\n        </div>\n    </div>\n);\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\n\nexport interface OrderSummaryItemsProps {\n    items: LineItemMap;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n        };\n    }\n\n    render(): ReactNode {\n        const { items } = this.props;\n        const { isExpanded } = this.state;\n\n        return (\n            <>\n                <h3\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\n                    data-test=\"cart-count-total\"\n                >\n                    <TranslatedString\n                        data={{ count: getItemsCount(items) }}\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>\n\n                <ul aria-live=\"polite\" className=\"productList\">\n                    {[\n                        ...items.physicalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || []).map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\n                        .map((summaryItemProps) => (\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\n                                <OrderSummaryItem {...summaryItemProps} />\n                            </li>\n                        ))}\n                </ul>\n\n                {this.renderActions()}\n            </>\n        );\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() < 5) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\n                    onClick={this.handleToggle}\n                    type=\"button\"\n                >\n                    {isExpanded ? (\n                        <>\n                            <TranslatedString id=\"cart.see_less_action\" />\n                            <IconChevronUp />\n                        </>\n                    ) : (\n                        <>\n                            <TranslatedString id=\"cart.see_all_action\" />\n                            <IconChevronDown />\n                        </>\n                    )}\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (\n            (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length\n        );\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    label: ReactNode;\n    amount?: number | null;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\n        return {\n            highlight: props.amount !== state.previousAmount,\n            previousAmount: props.amount,\n        };\n    }\n\n    state = {\n        highlight: false,\n        previousAmount: 0,\n    };\n\n    render(): ReactNode {\n        const {\n            amount,\n            children,\n            className,\n            currencyCode,\n            label,\n            superscript,\n            testId,\n            zeroLabel,\n        } = this.props;\n\n        const { highlight } = this.state;\n        const displayValue = getDisplayValue(amount, zeroLabel);\n\n        return (\n            <div data-test={testId}>\n                <CSSTransition\n                    addEndListener={this.handleTransitionEnd}\n                    classNames=\"changeHighlight\"\n                    in={highlight}\n                    timeout={{}}\n                >\n                    <div\n                        aria-live=\"polite\"\n                        className={classNames(\n                            'cart-priceItem',\n                            'optimizedCheckout-contentPrimary',\n                            className,\n                        )}\n                    >\n                        <span className=\"cart-priceItem-label\">\n                            <span data-test=\"cart-price-label\">\n                                {label}\n                                {'  '}\n                            </span>\n                            {currencyCode && (\n                                <span className=\"cart-priceItem-currencyCode\">\n                                    {`(${currencyCode}) `}\n                                </span>\n                            )}\n                        </span>\n\n                        <span className=\"cart-priceItem-value\">\n                            <span data-test=\"cart-price-value\">\n                                {isNumberValue(displayValue) ? (\n                                    <ShopperCurrency amount={displayValue} />\n                                ) : (\n                                    displayValue\n                                )}\n                            </span>\n\n                            {superscript && (\n                                <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\n                            )}\n                        </span>\n\n                        {children}\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        const { previousAmount } = this.state;\n\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                this.setState({\n                    highlight: false,\n                    previousAmount,\n                });\n                done();\n            }\n        });\n    };\n}\n\nexport default OrderSummaryPrice;\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        {children}\n    </section>\n);\n\nexport default OrderSummarySection;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => (\n    <OrderSummaryPrice\n        {...rest}\n        {...(onRemoved && {\n            onActionTriggered: () => code && onRemoved(code),\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\n        })}\n        amount={-1 * (amount || 0)}\n    >\n        {!!remaining && remaining > 0 && (\n            <span\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                data-test=\"cart-price-remaining\"\n            >\n                <TranslatedString id=\"cart.remaining_text\" />\n                {': '}\n                <ShopperCurrency amount={remaining} />\n            </span>\n        )}\n    </OrderSummaryPrice>\n);\n\nexport default memo(OrderSummaryDiscount);\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    taxes?: Tax[];\n    giftWrappingAmount?: number;\n    shippingAmount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    giftCertificates,\n    taxes,\n    giftWrappingAmount,\n    shippingAmount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={subtotalAmount}\n                className=\"cart-priceItem--subtotal\"\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\n                testId=\"cart-subtotal\"\n            />\n\n            {(coupons || []).map((coupon, index) => (\n                <OrderSummaryDiscount\n                    amount={coupon.discountedAmount}\n                    code={coupon.code}\n                    key={index}\n                    label={coupon.displayName}\n                    onRemoved={onRemovedCoupon}\n                    testId=\"cart-coupon\"\n                />\n            ))}\n\n            {!!discountAmount && (\n                <OrderSummaryDiscount\n                    amount={discountAmount}\n                    label={<TranslatedString id=\"cart.discount_text\" />}\n                    testId=\"cart-discount\"\n                />\n            )}\n\n            {(giftCertificates || []).map((giftCertificate, index) => (\n                <OrderSummaryDiscount\n                    amount={giftCertificate.used}\n                    code={giftCertificate.code}\n                    key={index}\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\n                    onRemoved={onRemovedGiftCertificate}\n                    remaining={giftCertificate.remaining}\n                    testId=\"cart-gift-certificate\"\n                />\n            ))}\n\n            {!!giftWrappingAmount && (\n                <OrderSummaryPrice\n                    amount={giftWrappingAmount}\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\n                    testId=\"cart-gift-wrapping\"\n                />\n            )}\n\n            <OrderSummaryPrice\n                amount={shippingAmount}\n                label={<TranslatedString id=\"cart.shipping_text\" />}\n                testId=\"cart-shipping\"\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\n            />\n\n            {!!handlingAmount && (\n                <OrderSummaryPrice\n                    amount={handlingAmount}\n                    label={<TranslatedString id=\"cart.handling_text\" />}\n                    testId=\"cart-handling\"\n                />\n            )}\n\n            {(taxes || []).map((tax, index) => (\n                <OrderSummaryPrice\n                    amount={tax.amount}\n                    key={index}\n                    label={tax.name}\n                    testId=\"cart-taxes\"\n                />\n            ))}\n\n            {!!storeCreditAmount && (\n                <OrderSummaryDiscount\n                    amount={storeCreditAmount}\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\n                    testId=\"cart-store-credit\"\n                />\n            )}\n        </>\n    );\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '../locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = (\n        <>\n            {hasDifferentCurrency ? (\n                <TranslatedString id=\"cart.estimated_total_text\" />\n            ) : (\n                <TranslatedString id=\"cart.total_text\" />\n            )}\n            {` (${shopperCurrencyCode})`}\n        </>\n    );\n\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={orderAmount}\n                className=\"cart-priceItem--total\"\n                label={label}\n                superscript={hasDifferentCurrency ? '*' : undefined}\n                testId=\"cart-total\"\n            />\n            {hasDifferentCurrency && currency && (\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\n                    <TranslatedString\n                        data={{\n                            total: currency.toStoreCurrency(orderAmount),\n                            code: storeCurrencyCode,\n                        }}\n                        id=\"cart.billed_amount_text\"\n                    />\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\n        (total, item) => (total += item.quantity),\n        0,\n    );\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n"],"names":["withFormik","mapPropsToValues","redeemableCode","handleSubmit","props","applyCoupon","applyGiftCertificate","clearError","code","trim","Error","validationSchema","language","required","translate","memo","formProps","coupons","length","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","shopperCurrency","cartUrl","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","mapToRedeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","isRemovingCoupon","isRemovingGiftCertificate","errors","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","appliedRedeemableError","giftCertificates","isApplyingRedeemable","onRemovedCoupon","removeCoupon","onRemovedGiftCertificate","removeGiftCertificate","removedRedeemableError","shouldCollapseCouponCode","checkoutSettings","isCouponCodeCollapsed","withRedeemable","OriginalComponent","subtotal","discountAmount","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","headerLink","subtotalAmount","giftWrappingAmount","shippingAmount","hasSelectedShippingOptions","handlingAmount","additionalLineItems","Redeemable","lineItems","cart","total","outstandingBalance","height","viewBox","width","xmlns","d","item","id","quantity","amount","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","testId","content","href","rel","target","TranslatedString","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","className","IconGiftCertificate","extendedComparisonPrice","description","giftWrapping","index","key","isNumber","ShopperCurrency","handleToggle","isExpanded","state","setState","render","items","this","count","getItemsCount","physicalItems","slice","sort","variantId","digitalItems","customItems","summaryItemProps","renderActions","getLineItemCount","onClick","type","IconChevronDown","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","getDerivedStateFromProps","children","currencyCode","label","superscript","zeroLabel","displayValue","getDisplayValue","CSSTransition","addEndListener","classNames","in","timeout","isNumberValue","Component","remaining","onRemoved","rest","OrderSummaryPrice","onActionTriggered","actionLabel","coupon","discountedAmount","displayName","giftCertificate","used","tax","shopperCurrencyCode","storeCurrencyCode","orderAmount","hasDifferentCurrency","toStoreCurrency","reduce"],"sourceRoot":""}